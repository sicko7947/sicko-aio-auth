// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.15.6
// source: auth/handleSuccess.proto

package auth_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SuccessProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchGroup         string `protobuf:"bytes,1,opt,name=merchGroup,proto3" json:"merchGroup,omitempty"`
	ProductSku         string `protobuf:"bytes,2,opt,name=ProductSku,proto3" json:"ProductSku,omitempty"`
	ProductName        string `protobuf:"bytes,3,opt,name=productName,proto3" json:"productName,omitempty"`
	ProductDescription string `protobuf:"bytes,4,opt,name=productDescription,proto3" json:"productDescription,omitempty"`
	Size               string `protobuf:"bytes,5,opt,name=size,proto3" json:"size,omitempty"`
	Price              string `protobuf:"bytes,6,opt,name=price,proto3" json:"price,omitempty"`
	Quantity           int64  `protobuf:"varint,7,opt,name=quantity,proto3" json:"quantity,omitempty"`
	OrderNumber        string `protobuf:"bytes,8,opt,name=orderNumber,proto3" json:"orderNumber,omitempty"`
	ProfileName        string `protobuf:"bytes,9,opt,name=profileName,proto3" json:"profileName,omitempty"`
	Email              string `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`
	Account            string `protobuf:"bytes,11,opt,name=account,proto3" json:"account,omitempty"`
	GiftCards          string `protobuf:"bytes,12,opt,name=giftCards,proto3" json:"giftCards,omitempty"`
	DiscountCode       string `protobuf:"bytes,13,opt,name=discountCode,proto3" json:"discountCode,omitempty"`
	ImageUrl           string `protobuf:"bytes,14,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	RedirectUrl        string `protobuf:"bytes,15,opt,name=redirectUrl,proto3" json:"redirectUrl,omitempty"`
}

func (x *SuccessProduct) Reset() {
	*x = SuccessProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_handleSuccess_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuccessProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessProduct) ProtoMessage() {}

func (x *SuccessProduct) ProtoReflect() protoreflect.Message {
	mi := &file_auth_handleSuccess_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessProduct.ProtoReflect.Descriptor instead.
func (*SuccessProduct) Descriptor() ([]byte, []int) {
	return file_auth_handleSuccess_proto_rawDescGZIP(), []int{0}
}

func (x *SuccessProduct) GetMerchGroup() string {
	if x != nil {
		return x.MerchGroup
	}
	return ""
}

func (x *SuccessProduct) GetProductSku() string {
	if x != nil {
		return x.ProductSku
	}
	return ""
}

func (x *SuccessProduct) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *SuccessProduct) GetProductDescription() string {
	if x != nil {
		return x.ProductDescription
	}
	return ""
}

func (x *SuccessProduct) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *SuccessProduct) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *SuccessProduct) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *SuccessProduct) GetOrderNumber() string {
	if x != nil {
		return x.OrderNumber
	}
	return ""
}

func (x *SuccessProduct) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *SuccessProduct) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SuccessProduct) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *SuccessProduct) GetGiftCards() string {
	if x != nil {
		return x.GiftCards
	}
	return ""
}

func (x *SuccessProduct) GetDiscountCode() string {
	if x != nil {
		return x.DiscountCode
	}
	return ""
}

func (x *SuccessProduct) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *SuccessProduct) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

type SuccessSetup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp       string `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TaskType        string `protobuf:"bytes,2,opt,name=taskType,proto3" json:"taskType,omitempty"`
	Category        string `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	MonitorMode     string `protobuf:"bytes,4,opt,name=monitorMode,proto3" json:"monitorMode,omitempty"`
	Region          string `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	UsePsychoCookie bool   `protobuf:"varint,6,opt,name=usePsychoCookie,proto3" json:"usePsychoCookie,omitempty"`
}

func (x *SuccessSetup) Reset() {
	*x = SuccessSetup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_handleSuccess_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuccessSetup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessSetup) ProtoMessage() {}

func (x *SuccessSetup) ProtoReflect() protoreflect.Message {
	mi := &file_auth_handleSuccess_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessSetup.ProtoReflect.Descriptor instead.
func (*SuccessSetup) Descriptor() ([]byte, []int) {
	return file_auth_handleSuccess_proto_rawDescGZIP(), []int{1}
}

func (x *SuccessSetup) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *SuccessSetup) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *SuccessSetup) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *SuccessSetup) GetMonitorMode() string {
	if x != nil {
		return x.MonitorMode
	}
	return ""
}

func (x *SuccessSetup) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *SuccessSetup) GetUsePsychoCookie() bool {
	if x != nil {
		return x.UsePsychoCookie
	}
	return false
}

type StreamHandleSuccessCheckoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId   string          `protobuf:"bytes,1,opt,name=keyId,proto3" json:"keyId,omitempty"`
	Setup   *SuccessSetup   `protobuf:"bytes,2,opt,name=setup,proto3" json:"setup,omitempty"`
	Product *SuccessProduct `protobuf:"bytes,3,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *StreamHandleSuccessCheckoutRequest) Reset() {
	*x = StreamHandleSuccessCheckoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_handleSuccess_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamHandleSuccessCheckoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamHandleSuccessCheckoutRequest) ProtoMessage() {}

func (x *StreamHandleSuccessCheckoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_handleSuccess_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamHandleSuccessCheckoutRequest.ProtoReflect.Descriptor instead.
func (*StreamHandleSuccessCheckoutRequest) Descriptor() ([]byte, []int) {
	return file_auth_handleSuccess_proto_rawDescGZIP(), []int{2}
}

func (x *StreamHandleSuccessCheckoutRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *StreamHandleSuccessCheckoutRequest) GetSetup() *SuccessSetup {
	if x != nil {
		return x.Setup
	}
	return nil
}

func (x *StreamHandleSuccessCheckoutRequest) GetProduct() *SuccessProduct {
	if x != nil {
		return x.Product
	}
	return nil
}

type StreamHandleSuccessCheckoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *StreamHandleSuccessCheckoutResponse) Reset() {
	*x = StreamHandleSuccessCheckoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_handleSuccess_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamHandleSuccessCheckoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamHandleSuccessCheckoutResponse) ProtoMessage() {}

func (x *StreamHandleSuccessCheckoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_handleSuccess_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamHandleSuccessCheckoutResponse.ProtoReflect.Descriptor instead.
func (*StreamHandleSuccessCheckoutResponse) Descriptor() ([]byte, []int) {
	return file_auth_handleSuccess_proto_rawDescGZIP(), []int{3}
}

func (x *StreamHandleSuccessCheckoutResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_auth_handleSuccess_proto protoreflect.FileDescriptor

var file_auth_handleSuccess_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x22, 0xdc, 0x03, 0x0a, 0x0e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x6b, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x69, 0x66, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x69, 0x66, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x55, 0x72, 0x6c, 0x22, 0xc8, 0x01, 0x0a, 0x0c, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53,
	0x65, 0x74, 0x75, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x50, 0x73, 0x79, 0x63, 0x68,
	0x6f, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x75,
	0x73, 0x65, 0x50, 0x73, 0x79, 0x63, 0x68, 0x6f, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x22, 0x9c,
	0x01, 0x0a, 0x22, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x73,
	0x65, 0x74, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x74,
	0x75, 0x70, 0x52, 0x05, 0x73, 0x65, 0x74, 0x75, 0x70, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x3f, 0x0a,
	0x23, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x13,
	0x5a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x3b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_auth_handleSuccess_proto_rawDescOnce sync.Once
	file_auth_handleSuccess_proto_rawDescData = file_auth_handleSuccess_proto_rawDesc
)

func file_auth_handleSuccess_proto_rawDescGZIP() []byte {
	file_auth_handleSuccess_proto_rawDescOnce.Do(func() {
		file_auth_handleSuccess_proto_rawDescData = protoimpl.X.CompressGZIP(file_auth_handleSuccess_proto_rawDescData)
	})
	return file_auth_handleSuccess_proto_rawDescData
}

var file_auth_handleSuccess_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_auth_handleSuccess_proto_goTypes = []interface{}{
	(*SuccessProduct)(nil),                      // 0: protobuf.SuccessProduct
	(*SuccessSetup)(nil),                        // 1: protobuf.SuccessSetup
	(*StreamHandleSuccessCheckoutRequest)(nil),  // 2: protobuf.StreamHandleSuccessCheckoutRequest
	(*StreamHandleSuccessCheckoutResponse)(nil), // 3: protobuf.StreamHandleSuccessCheckoutResponse
}
var file_auth_handleSuccess_proto_depIdxs = []int32{
	1, // 0: protobuf.StreamHandleSuccessCheckoutRequest.setup:type_name -> protobuf.SuccessSetup
	0, // 1: protobuf.StreamHandleSuccessCheckoutRequest.product:type_name -> protobuf.SuccessProduct
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_auth_handleSuccess_proto_init() }
func file_auth_handleSuccess_proto_init() {
	if File_auth_handleSuccess_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_auth_handleSuccess_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuccessProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_handleSuccess_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuccessSetup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_handleSuccess_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamHandleSuccessCheckoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_handleSuccess_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamHandleSuccessCheckoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_auth_handleSuccess_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_auth_handleSuccess_proto_goTypes,
		DependencyIndexes: file_auth_handleSuccess_proto_depIdxs,
		MessageInfos:      file_auth_handleSuccess_proto_msgTypes,
	}.Build()
	File_auth_handleSuccess_proto = out.File
	file_auth_handleSuccess_proto_rawDesc = nil
	file_auth_handleSuccess_proto_goTypes = nil
	file_auth_handleSuccess_proto_depIdxs = nil
}
